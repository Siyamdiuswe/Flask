1. To encrypt our password:
python
>>> from flask_bcrypt import Bcrypt
>>> bcrypt = Bcrypt()
bcrypt.generate_password_hash('testing')
b'$2b$12$DuOoaNJ2qGYNEZZcziI7IO3UouDPayl3XBle62QivErmkEdpSgIpK' #b means this is in bytes

If we want string:
>>> bcrypt.generate_password_hash('testing').decode('utf-8')
'$2b$12$xP47BUJeeCGoAhBSefYfEeGPWSp52TVpDJVtje3mBM325B00hwQlC'

To check if our encoded password is equal to our plain text:
hashed_pw = bcrypt.generate_password_hash('testing').decode('utf-8')
>>> bcrypt.check_password_hash(hashed_pw,'password')
False

>>> bcrypt.check_password_hash(hashed_pw,'testing')
True
................................................................
2. import Bcrypt in app(__init__.py)
from flask_bcrypt import Bcrypt
then initiate Bcrypt,
bcrypt = Bcrypt(app)
................................................................
3. Import db and bcrypt in routes.py
from flaskblog import app, db, bcrypt

In registration route, If form.validate_on_submit():
				hashed_password = bcrypt.generate_password_hash(form.password.data).decode('utf-8')
        			user = User(username=form.username.data, email=form.email.data, password=form.password.data)
        			db.session.add(user)
       				db.session.commit()
        			flash('Your account has been created! You can now able to log in', 'success')
................................................................
If same user create account two times it will down our site.So we have to throw
an error when same user wants to make more than one register.

#So we have to raise validationerror:
In forms.py import 
from flaskblog.models import User
from wtforms.validators import ValidationError

    def validate_username(self, username):
        user = User.query.filter_by(username=username.data).first()   
        if user:
            raise ValidationError('That username is taken. Please choose a different one.')


    def validate_email(self, email):
        email = User.query.filter_by(email=email.data).first()   
        if email:
            raise ValidationError('That email is taken. Please choose a different one.')

................................................................



